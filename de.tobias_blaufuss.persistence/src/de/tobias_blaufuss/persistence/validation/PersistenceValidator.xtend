/*
 * generated by Xtext 2.12.0
 */
package de.tobias_blaufuss.persistence.validation

import de.tobias_blaufuss.persistence.persistence.BackrefField
import org.eclipse.xtext.validation.Check
import de.tobias_blaufuss.persistence.persistence.Entity
import de.tobias_blaufuss.persistence.persistence.PersistencePackage

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class PersistenceValidator extends AbstractPersistenceValidator {
	
//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					PersistencePackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
	
	@Check(FAST)
	def checkValidBackrefFieldType(BackrefField field){
		val entityOfField = field.eContainer
		val referencedEntity = field.backref.entityReference
		if(entityOfField != referencedEntity){
			error('''The type of the referenced field («referencedEntity.name») does not equal the type of this entity («(entityOfField as Entity).name»)''', field, PersistencePackage.Literals.BACKREF_FIELD__BACKREF)
		}
	}
}
